#! /bin/sh
FST=$1
CORPUS=$2
OUTPUT_FST=$3

# Temporary directory for intermediate files
TEMP_DIR=".tmp"
# Check if it exists
if [-d "$TEMP_DIR"]; then
	mkdir $TEMP_DIR
fi

CLEANED_CORPUS="$TEMP_DIR/clean-corpus.tagged"

ATTFST="$TEMP_DIR/transducer.att"
HFST_FST="$TEMP_DIR/transducer.hfst"

WEIGHTED_REGEXP="$TEMP_DIR/weighted-regex"
WEIGHTED_FST="$TEMP_DIR/weighted-pairs.hfst"
COMPOSED_FST="$TEMP_DIR/weighted-transducer.hfst"
COMPOSED_ATTFST="$TEMP_DIR/weighted-transducer.att"

# Convert the input FST to HFST
lt-print $FST |
sed -e 's/:/\\:/'|
sed -e :a -e 's/ /\&#39;@_SPACE_@\&#39;/;ta'> $ATTFST

hfst-txt2fst --epsilon=Îµ -i $ATTFST -o $HFST_FST

# Clean the input tagged corpus
# REMOVE EMPTY LINES
sed -e '/^$/d' $CORPUS > $CLEANED_CORPUS

# Generate a weighted FST from the string pairs
LINES=$(wc -l $CLEANED_CORPUS | cut -d ' ' -f1)

cat $CLEANED_CORPUS | sed -e 's/[ \t]//' | sed -e 's/\^.*\///' |
sed -e 's/\$$//' > $WEIGHTED_REGEXP
python prepare_regex_strings.py $WEIGHTED_REGEXP
cat $WEIGHTED_REGEXP | hfst-regexp2fst -j -o $WEIGHTED_FST

# Compose the input FST and the weighted FST
hfst-compose -1 $HFST_FST -2 $WEIGHTED_FST -v -o $COMPOSED_FST
hfst-fst2txt -i $COMPOSED_FST -o $COMPOSED_ATTFST

# Compile the FST back using lttoolbox
lt-comp lr $COMPOSED_ATTFST $OUTPUT_FST

# Delete the temporary files
# rm -rf $TEMP_DIR

# ./lt-weight ../../apertium-eng/eng.automorf.bin ../../apertium-eng/texts/eng.tagged efst.bin
